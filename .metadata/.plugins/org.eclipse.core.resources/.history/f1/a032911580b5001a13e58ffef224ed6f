package com.onlinecourse.microservices.currencyconverterservice;

import java.math.BigDecimal;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RestController;

@RestController
public class CurrencyConversionController {
	
	@Autowired
	private CurrencyExchangeServiceProxy proxyfromto;
	
	@Autowired
	private CourseBillingServiceProxy proxycoursecost;
	
//	@GetMapping("/currency-converter/from/{from}/to/{to}/value/{quantity}")
//	public CurrencyConversionBean convertCurrency(@PathVariable String from,
//			@PathVariable String to,
//			@PathVariable BigDecimal quantity
//			){
//		
//		Map<String, String> uriVariables = new HashMap<>();
//		uriVariables.put("from", from);
//		uriVariables.put("to", to);
//
//		ResponseEntity<CurrencyConversionBean> responseEntity = new RestTemplate().getForEntity(
//				"http://localhost:8000/currency-exchange/from/{from}/to/{to}", 
//				CurrencyConversionBean.class, 
//				uriVariables );   
//		
//		CurrencyConversionBean response = responseEntity.getBody();
//		
//		return new CurrencyConversionBean(response.getId(),from,to,response.getConversionMultiple(),
//				quantity,quantity.multiply(response.getConversionMultiple()),response.getPort()); 
//	}
//	

	@GetMapping("/currency-converter-feign/from/{from}/courseId/{courseId}")
	public CurrencyConversionBean convertCurrencyFeign(@PathVariable String from, @PathVariable long courseId) {

		CurrencyConversionBean response = proxyfromto.retrieveExchangeValue(from, String to);
		
		CurrencyConversionBean response2= proxycoursecost.retriveBillingService(courseId);

		return new CurrencyConversionBean(response2.getCourseId(), response2.getCourseName(), response2.getCoursePrice(),response2.getTax(),
				response2.getDiscount(), response2.getFinalPrice(),from, response.getTo(),response.getConversionMultiple(),
				(response2.getFinalPrice()*response.getConversionMultiple()), response.getPort());
	}


}
